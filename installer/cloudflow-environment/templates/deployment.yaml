# Copyright (C) 2016-2019 Lightbend Inc. <https://www.lightbend.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ template "operator.name" . }}
  labels: {{ include "operator.labels" . | indent 4 }}
spec:
  replicas: 1 # TODO: add a pod autoscaler to manage this deployment
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "operator.name" . }}
  template:
    metadata:
      annotations:
      labels: {{ include "operator.labels" . | indent 8 }}
    spec:
      serviceAccountName: {{ template "operator.name" . }}
      automountServiceAccountToken: true
      containers:
        - name: {{ template "operator.name" . }}
          image: "{{ required "Operator docker image name cannot be empty" .Values.operator.image.name }}"
          imagePullPolicy: {{ .Values.operator.image.pullPolicy }}
          ports:
            - containerPort: 5001
              name: http
          # Set CPU/memory requests/limits
          resources:
            requests:
              memory: {{ required "Requested pod memory must be set" .Values.operator.resources.requests.memory }}
              cpu: {{ required "Requested pod cpu must be set" .Values.operator.resources.requests.cpu }}
            limits:
              memory: {{ required "Max pod memory must be set" .Values.operator.resources.limits.memory }}
              cpu: {{ required "Max pod cpu must be set" .Values.operator.resources.limits.cpu }}
          env:
            # Configure the JVM to behave itself when run in a Docker container
            - name: JAVA_OPTS
              value: {{ .Values.operator.jvm.opts }}
            # Cluster type
            - name: CLUSTER_TYPE
              value: {{ required "Cluster type cannot be empty" .Values.operator.clusterType }}
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: "{{ required "Kafka bootstrap servers cannot be empty" .Values.kafka.bootstrapServers }}"
            # Configure Strimzi details
            - name: KAFKA_STRIMZI_CLUSTER_NAME
              value: "{{ template "operator.strimziClusterName" . }}"
            - name: KAFKA_STRIMZI_TOPIC_OPERATOR_NAMESPACE
              value: "{{ required "Strimzi Kafka topic operator namespace cannot be empty" .Values.kafka.strimzi.topicOperatorNamespace }}"
            # Configure runner resource request/limit defaults
            - name: AKKA_RUNNER_REQUESTS_MEMORY
              value: "{{ .Values.operator.akkaRunner.requestsMemory }}"
            - name: AKKA_RUNNER_REQUESTS_CPU
              value: "{{ .Values.operator.akkaRunner.requestsCpu }}"
            - name: AKKA_RUNNER_LIMITS_MEMORY
              value: "{{ .Values.operator.akkaRunner.limitsMemory }}"
            - name: SPARK_EXECUTOR_REQUESTS_MEMORY
              value: "{{ .Values.operator.sparkExecutor.requestsMemory }}"
            - name: SPARK_EXECUTOR_REQUESTS_CPU
              value: "{{ .Values.operator.sparkExecutor.requestsCpu }}"
            - name: SPARK_DRIVER_REQUESTS_MEMORY
              value: "{{ .Values.operator.sparkDriver.requestsMemory }}"
            - name: SPARK_DRIVER_REQUESTS_CPU
              value: "{{ .Values.operator.sparkDriver.requestsCpu }}"
            # Misc values
            - name: PERSISTENT_STORAGE_CLASS
              value: "{{ required "Persistent Storage Class for PVC configuration required" .Values.operator.persistentStorageClass }}"
            - name: RELEASE_VERSION
              value: "{{ .Chart.Version }}"
            # Expose pod meta information to operator
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          readinessProbe:
            httpGet:
              path: /checks/ready
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /checks/healthy
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          {{- if .Values.operator.eventsPersistence.es.useConsoleEs }}
          volumeMounts:
          - mountPath: /etc/console-discovery-elasticsearch
            name: discovery-elasticsearch-volume
          {{- end }}
      {{- if .Values.operator.eventsPersistence.es.useConsoleEs }}
      volumes:
      - configMap:
          defaultMode: 420
          name: discovery-elasticsearch
        name: discovery-elasticsearch-volume
      {{- end }}
