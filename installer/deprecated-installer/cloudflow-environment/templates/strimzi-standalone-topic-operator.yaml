# Copyright (C) 2016-2020 Lightbend Inc. <https://www.lightbend.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


{{ if eq .Values.kafka.mode "External" }}
# Copied from Strimzi project https://github.com/strimzi/strimzi-kafka-operator/tree/master/install/topic-operator
# https://strimzi.io/docs/master/#deploying-the-topic-operator-standalone-deploying
#
# Customizations: 
#   Use the $strimziVersion for strimzi/operator Docker image
#   Add installed-by=cloudflow label to all resources
apiVersion: v1
kind: ServiceAccount
metadata:
  name: strimzi-topic-operator
  labels:
    app: strimzi
    {{ include "operator.labels" . | indent 4 }}

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: strimzi-topic-operator
  labels:
    app: strimzi
    {{ include "operator.labels" . | indent 4 }}
rules:
- apiGroups:
  - "kafka.strimzi.io"
  resources:
  - kafkatopics
  verbs:
  - get
  - list
  - watch
  - create
  - patch
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: strimzi-topic-operator
  labels:
    app: strimzi
    {{ include "operator.labels" . | indent 4 }}
subjects:
  - kind: ServiceAccount
    name: strimzi-topic-operator
roleRef:
  kind: Role
  name: strimzi-topic-operator
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: kafkatopics.kafka.strimzi.io
  labels:
    app: strimzi
    {{ include "operator.labels" . | indent 4 }}
spec:
  group: kafka.strimzi.io
  versions:
  - name: v1beta1
    served: true
    storage: true
  - name: v1alpha1
    served: true
    storage: false
  version: v1beta1
  scope: Namespaced
  names:
    kind: KafkaTopic
    listKind: KafkaTopicList
    singular: kafkatopic
    plural: kafkatopics
    shortNames:
    - kt
  additionalPrinterColumns:
  - name: Partitions
    description: The desired number of partitions in the topic
    JSONPath: .spec.partitions
    type: integer
    priority: 0
  - name: Replication factor
    description: The desired number of replicas of each partition
    JSONPath: .spec.replicas
    type: integer
    priority: 0
  validation:
    openAPIV3Schema:
      properties:
        spec:
          type: object
          properties:
            partitions:
              type: integer
              minimum: 1
            replicas:
              type: integer
              minimum: 1
              maximum: 32767
            config:
              type: object
            topicName:
              type: string
          required:
          - partitions
          - replicas

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: strimzi-topic-operator
  labels:
    app: strimzi
    {{ include "operator.labels" . | indent 4 }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: strimzi-topic-operator
        {{ include "operator.labels" . | indent 8 }}
    spec:
      serviceAccountName: strimzi-topic-operator
      containers:
        - name: strimzi-topic-operator
          image: strimzi/operator:{{ .Values.kafka.strimzi.version }}
          args:
          - /opt/strimzi/bin/topic_operator_run.sh
          env:
            - name: STRIMZI_RESOURCE_LABELS
              value: "strimzi.io/cluster={{ template "operator.strimziClusterName" . }}"
            - name: STRIMZI_KAFKA_BOOTSTRAP_SERVERS
              value: "{{ required "Kafka bootstrap servers cannot be empty" .Values.kafka.bootstrapServers }}"
            - name: STRIMZI_ZOOKEEPER_CONNECT
              value: "{{ required "Kafka zookeeper hosts cannot be empty" .Values.kafka.zookeeperHosts }}"
            - name: STRIMZI_ZOOKEEPER_SESSION_TIMEOUT_MS
              value: "20000"
            - name: STRIMZI_FULL_RECONCILIATION_INTERVAL_MS
              value: "900000"
            - name: STRIMZI_TOPIC_METADATA_MAX_ATTEMPTS
              value: "6"
            - name: STRIMZI_LOG_LEVEL
              value: INFO
            - name: STRIMZI_TLS_ENABLED
              value: "false"
            - name: STRIMZI_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          livenessProbe:
            httpGet:
              path: /healthy
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 30
          resources:
            {{ toYaml .Values.kafka.strimzi.standaloneTopicOperator.resources | indent 12 }}
  strategy:
    type: Recreate
{{ end }}
