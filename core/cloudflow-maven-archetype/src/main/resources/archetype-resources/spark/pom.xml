<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>${groupId}</groupId>
    <artifactId>${artifactId}</artifactId>
    <version>${version}</version>
  </parent>


  <groupId>${groupId}</groupId>
  <artifactId>${artifactId}-spark</artifactId>
  <version>${version}</version>
  <packaging>jar</packaging>

  <properties>
    <jar_file>${project.build.directory}/${project.build.finalName}.jar</jar_file>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>

  <build>
    <finalName>${project.artifactId}</finalName>
    <sourceDirectory>src/main/scala</sourceDirectory>

    <plugins>
      <plugin>
        <groupId>at.makubi.maven.plugin</groupId>
        <artifactId>avrohugger-maven-plugin</artifactId>
        <version>1.6</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate-scala-sources</goal>
            </goals>
            <configuration>
              <sourceDirectory>${project.basedir}/../datamodel/src/main/avro/</sourceDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker.maven.plugin.version}</version>
        <configuration>
          <images>
            <image>
              <name>%a:%v</name>
              <registry>docker.io/${docker.username}</registry>
              <build>
                <from>adoptopenjdk/openjdk8:alpine</from>

                <assemblies>
                  <assembly>
                    <name>deps-release</name>
                    <descriptorRef>release-dependencies</descriptorRef>
                    <targetDir>/opt/cloudflow</targetDir>
                    <user>185</user>
                  </assembly>
                  <assembly>
                    <descriptorRef>artifact</descriptorRef>
                    <targetDir>/opt/cloudflow</targetDir>
                    <user>185</user>
                  </assembly>

                  <assembly>
                    <name>additional-resources</name>
                    <mode>dir</mode>
                    <targetDir>/opt</targetDir>
                    <user>185</user>
                    <inline>
                      <files>
                        <file>
                          <source>${basedir}/src/main/resources/spark-entrypoint.sh</source>
                        </file>
                      </files>
                    </inline>
                  </assembly>

                  <assembly>
                    <name>log4j-properties</name>
                    <mode>dir</mode>
                    <targetDir>/opt/spark/conf</targetDir>
                    <user>185</user>
                    <inline>
                      <files>
                        <file>
                          <source>${basedir}/src/main/resources/log4j.properties</source>
                        </file>
                      </files>
                    </inline>
                  </assembly>

                  <assembly>
                    <name>prometheus-resources</name>
                    <mode>dir</mode>
                    <targetDir>/etc/metrics/conf</targetDir>
                    <user>185</user>
                    <inline>
                      <files>
                        <file>
                          <source>${basedir}/src/main/resources/prometheus.yaml</source>
                        </file>
                        <file>
                          <source>${basedir}/src/main/resources/metrics.properties</source>
                        </file>
                      </files>
                    </inline>
                  </assembly>
                </assemblies>

                <env>
                  <SPARK_HOME>/opt/spark</SPARK_HOME>
                  <SPARK_VERSION>2.4.5</SPARK_VERSION>
                  <JAVA_OPTS>-Dlogback.configurationFile=/opt/logging/logback.xml</JAVA_OPTS>
                </env>

                <runCmds>
                  <run>apk add bash curl</run>
                  <run>ln -s /lib /lib64</run>
                  <run>chgrp root /etc/passwd</run>
                  <run>chmod ug+rw /etc/passwd</run>
                  <run>rm -rf /var/cache/apt/*</run>
                  <run>addgroup -S -g 185 cloudflow</run>
                  <run>adduser -u 185 -S -h /home/cloudflow -s /sbin/nologin cloudflow root</run>
                  <run>adduser cloudflow cloudflow</run>
                  <run>mkdir -p /opt/spark/work-dir /prometheus /opt/spark</run>
                  <run>chmod -R 777 /opt/spark</run>
                  <run>wget "https://github.com/lightbend/spark/releases/download/2.4.5-lightbend/spark-2.4.5-bin-cloudflow-2.12.tgz"</run>
                  <run>tar -xvzf spark-2.4.5-bin-cloudflow-2.12.tgz</run>
                  <run>cp -r spark-2.4.5-bin-cloudflow-2.12/* /opt/spark</run>
                  <run>rm -rf spark-2.4.5-bin-cloudflow-2.12</run>
                  <run>rm -rf spark-2.4.5-bin-cloudflow-2.12.tgz</run>
                  <run>rm /opt/spark/jars/slf4j-log4j12-1.7.16.jar</run>
                  <run>rm /opt/spark/jars/log4j-1.2.17.jar</run>
                  <run>curl https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.11.0/jmx_prometheus_javaagent-0.11.0.jar -o /prometheus/jmx_prometheus_javaagent.jar</run>
                  <run>cp /etc/metrics/conf/prometheus.yaml /prometheus/prometheus.yaml</run>
                  <run>curl -L https://github.com/krallin/tini/releases/download/v0.18.0/tini -o /sbin/tini</run>
                  <run>chmod +x /sbin/tini</run>
                  <run>chmod ug+rwX /home/cloudflow</run>
                  <run>mkdir -p /opt/spark/conf</run>
                  <run>chgrp -R 0 /opt/spark</run>
                  <run>chmod -R g=u /opt/spark</run>
                  <run>chmod -R u+x /opt/spark/bin</run>
                  <run>chmod -R u+x /opt/spark/sbin</run>
                  <run>chgrp -R 0 /prometheus</run>
                  <run>chmod -R g=u /prometheus</run>
                  <run>chgrp -R 0 /etc/metrics/conf</run>
                  <run>chmod -R g=u /etc/metrics/conf</run>
                  <run>chown cloudflow:root /opt</run>
                  <run>chmod 775 /opt</run>
                  <run>chmod g+w /opt/spark/work-dir</run>
                </runCmds>

                <workdir>/opt/spark/work-dir</workdir>
                <user>185</user>

                <entryPoint>
                  <exec>
                    <arg>bash</arg>
                    <arg>/opt/spark-entrypoint.sh</arg>
                  </exec>
                </entryPoint>

              </build>
            </image>
          </images>
        </configuration>
      </plugin>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>4.5.1</version>
        <executions>
          <execution>
            <id>add-generated-sources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sourceDir>${project.build.directory}/generated-sources/avro</sourceDir>
            </configuration>
          </execution>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <scalaVersion>${scala.version}</scalaVersion>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <version>2.0.2</version>
        <configuration>
          <parallel>true</parallel>
          <forkMode>never</forkMode>
        </configuration>
        <executions>
          <execution>
            <id>test</id>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro</artifactId>
      <version>${avro.version}</version>
    </dependency>
    <dependency>
      <groupId>com.lightbend.cloudflow</groupId>
      <artifactId>cloudflow-spark_${scala.binary.version}</artifactId>
      <version>${cloudflow.version}</version>
    </dependency>
    <dependency>
      <groupId>com.thoughtworks.paranamer</groupId>
      <artifactId>paranamer</artifactId>
      <version>2.8</version>
    </dependency>
    <dependency>
      <groupId>com.lightbend.cloudflow</groupId>
      <artifactId>cloudflow-runner_${scala.binary.version}</artifactId>
      <version>${cloudflow.version}</version>
    </dependency>
    <dependency>
      <groupId>com.lightbend.cloudflow</groupId>
      <artifactId>cloudflow-localrunner_${scala.binary.version}</artifactId>
      <version>${cloudflow.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.16</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>1.7.16</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.3</version>
    </dependency>
    
    <dependency>
      <groupId>com.lightbend.cloudflow</groupId>
      <artifactId>cloudflow-spark-testkit_${scala.binary.version}</artifactId>
      <version>${cloudflow.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
