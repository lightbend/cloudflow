blueprint {

   streamlets {

     # generator
     transaction-generator = cloudflow.examples.frauddetection.ingress.GenerateTransactions

     # splitter
     split-on-merchant = cloudflow.examples.frauddetection.process.SplitOnApprovedMerchant

     # here's where the real work gets done!
     fraud-detection = cloudflow.examples.frauddetection.process.ScoreTransactionsAndServeModels

     # log it!
     log-transactions = cloudflow.examples.frauddetection.egress.LogCustomerTransactions

     # Spark Aggregation
     fraud-report = cloudflow.examples.frauddetection.process.FraudPerMerchantPerMonth

     # log aggregation results
     log-fraud-report = cloudflow.examples.frauddetection.egress.LogFraudReport
   }

   connections {
     transaction-generator.transactions = [split-on-merchant.in]
     split-on-merchant.yes = [log-transactions.merchant]
     split-on-merchant.no = [fraud-detection.transactions]
     fraud-detection.results = [log-transactions.model, fraud-report.in]
     fraud-report.out = [log-fraud-report.in]
   }
 }
