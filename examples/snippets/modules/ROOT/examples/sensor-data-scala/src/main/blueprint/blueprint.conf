blueprint {
  streamlets {
    http-ingress = sensordata.SensorDataHttpIngress
    file-ingress = sensordata.SensorDataFileIngress
    metrics = sensordata.SensorDataToMetrics
    validation = sensordata.MetricsValidation
    valid-logger = sensordata.ValidMetricLogger
    invalid-logger = sensordata.InvalidMetricLogger
    rotorizer = sensordata.RotorSpeedFilter
    rotor-avg-logger = sensordata.RotorspeedWindowLogger
  }

  topics {
    sensor-data {
      producers = [http-ingress.out, file-ingress.out]
      consumers = [metrics.in]
    }
    metrics {
      producers = [metrics.out]
      consumers = [validation.in]
    }
    invalid-metrics {
      producers = [validation.invalid]
      consumers = [invalid-logger.in]
    }
    valid-metrics {
      producers = [validation.valid]
      consumers = [valid-logger.in,rotorizer.in]
    }
    rotor-speeds {
      producers = [rotorizer.out]
      consumers = [rotor-avg-logger.in]
    }
  }
}
